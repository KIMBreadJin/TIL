package com.green.dao;

import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;

import com.green.dto.Member;

public class MemberDao {
	Connection connection; //멤버면수
	//DataSource ds;
	public void setConnection(Connection connection) { //setter
		this.connection=connection;
}
	public List<Member> selectList() throws Exception { //MemberListServlet에서의 DATABASE관련 코드 이동
		
		Connection connection = null;
		Statement stmt = null;
		ResultSet rs = null;
		try {
			stmt= this.connection.createStatement();
			rs =stmt.executeQuery(
					"select mno ,mname, email, cre_date from members"
					);
			List<Member> members = new ArrayList<>();
			while(rs.next()) {
				members.add(new Member()
						.setNo(rs.getInt("mno"))
						.setName(rs.getString("mname"))
						.setEmail(rs.getString("email"))
						.setCreatedDate(rs.getDate("cre_date"))
						);
			}
			return members;
			
		} catch(Exception e) {
			throw e;
		} finally {
			try { if(rs!=null) rs.close();} catch(Exception e) {}
			try { if(stmt!=null) stmt.close();} catch(Exception e) {}
			try { if(connection!=null) connection.close();} catch(Exception e) {}
		}
	}
	public int insert (Member member) throws Exception{
		Connection connection = null;
		PreparedStatement pstmt = null;
		
		try {
			System.out.println(connection);
			pstmt= connection.prepareStatement(
					"insert into members(email, pwd, mname, cre_date,mod_date) values(?,?,?,now(),now())");// Statement 를 생성하겠다 
			pstmt.setString(1, member.getEmail() );
			pstmt.setString(2, member.getPassword());
			pstmt.setString(3, member.getName());
			return pstmt.executeUpdate();// prepare(준비하고) ? 를 채우고 이때  실행함 
			
		}catch(Exception e) {
			throw e;//강제로 ServletException 객체 생성하여 던지기 
		} finally {// 객체 생성의 역순으로 닫기 
			try { if(pstmt !=null) pstmt.close();} catch(Exception e ) {}
			try { if(connection !=null) connection.close();} catch(Exception e ) {}
		}
	}
	public Member selectOne(int no) throws Exception{
		Connection connection = null;
		Statement stmt = null;
		ResultSet rs = null;
		try {
			System.out.println(connection);//Connection 객체의 주소가 잘 떠야 합니다. 
			stmt= this.connection.createStatement(); 
			rs =stmt.executeQuery("select mno,email,mname, cre_date from members  " + 
					 " where mno = " +no);
			rs.next();
			response.setContentType("text/html; charset=utf-8");
			RequestDispatcher rd = request.getRequestDispatcher("MemberUpdateForm.jsp");
			String email = rs.getString("email"); //db에서 가져온 이름 
			String name = rs.getString("mname"); //db에서 가져온 이름 
			no = rs.getString("mno"); //db에서 가져온 이름 
			Date cre_date = rs.getDate("cre_date");
			System.out.println("번호  : " +no + " 이름 : " + name + " 이메일  : " +  email);
			System.out.println("가입일   : " +cre_date);
			Member member =new Member().setCreatedDate(cre_date).setEmail(email)
					.setName(name).setNo(Integer.parseInt(no));
			request.setAttribute("m", member);
			rd.forward(request, response);
		}catch(Exception e) {
		}finally {
			try {if(rs!=null) rs.close();} catch(Exception e) {}
			
		}
	}
}

